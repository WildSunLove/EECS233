import java.util.*;
public class Algorithm6B {  
    public static <T extends Comparable<? super T>> T kth_largest(LinkedList<T> L, int k) {    
        PriorityQueue<T> S = new PriorityQueue<T>();
	for (int i = 0; i < k; i++) {
	    S.add(L.remove());
	}
	int lsize = L.size();
	for (int i = 0; i < lsize; i++) {
	    T next_element = L.remove();
	    if (next_element.compareTo(S.peek())>0) {
		S.remove();
		S.add(next_element);
	    }
	}
	return S.peek();	
    }

    public static void main(String[] args) {
	LinkedList<String> L = new LinkedList<String>();
	L.add("A");
	L.add("B");
	L.add("C");
	L.add("D");
	L.add("E");
	System.out.println(kth_largest(L, 2));
    }

}                        

